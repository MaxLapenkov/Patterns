// С какими принципами из SOLID данный паттерн связан и каким образом?
Singleton
// S — принцип единственной ответственности. Обычно выполняет много функций
// O — принцип открытости/закрытости: объекты должны быть открыты для расширения, но закрыты для изменения. Синглтон нарушает данный принцип, так как контролирует точку доступа и возвращает только самого себя, а не расширение.
// L — принцип подстановки Барбары Лисков: объекты могут быть заменены экземплярами своих подтипов без изменения использующего их кода. Это неверно в случае с синглтоном, потому что наличие нескольких разных версий объекта означает, что это уже не синглтон.
// I — принцип разделения интерфейса: много специализированных интерфейсов лучше, чем один универсальный. Это единственный принцип, который синглтон нарушает не напрямую, но лишь потому, что он не позволяет использовать интерфейс.
// D — принцип инверсии зависимостей: вы должны зависеть только от абстракций, а не от чего-то конкретного. Синглтон нарушает его, потому что в данном случае зависеть можно только от конкретного экземпляра синглтона.

Strategy
// Реализует принцип открытости/закрытости.

Template method
// принцип единственной ответственности.

Factory, Factory Method, Abstract Factory
// Реализует принцип открытости/закрытости.

Observer/mediator
// Реализует принцип открытости/закрытости.

Facade
// принцип разделения интерфейса